<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>For Life</title>
    <url>/Thinking&amp;Experience/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Warning！！请停止窥探隐私行为！！您的IP已经被记录！！" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5fcc126c1117c067b9eb7fa8db830999cf158cbf3b4cce818d32ea52aee10285">d370c5caa6f82aab46a5e5036abddd95f3748a1f868670e6c92a5d7157303714555794d1e8593b3200afee48d526c32cf6d2539a053be8345bb623863bfe1ef2bc8e6db1fbdc25d588cb61293da0bdd77db069d154eea9ea2f1771f1d34f939d132cd07a4de316991cf6f3acaa0568fcb619a20d8aa644e2ab1e0b6a5c2ee52a2135163afdae434b83a24ec668d23721b5d004dcb42d2b285dd476a9fc3ac4b5ed7a4e2e1eb2749ee792ccff2b58aae0e4eb2bee35baecd60d14c8ef577e3ce7bcab8039a47d027018526fd358f92e1dad8670cbbf59d83fc552487827d027c303e5b93910ce97ccc5e5cce67b0a209645f5b2377b7d5978f1d437edce560e569dcc9b072543eaf78253c787d28bfd81081e9d7e257f9a83df7366245f00c456f90c82181e00507b2622a87e37dd91a5b07b994b03b938aa94f9b486e717576e67a218e96681a5a8965854de702e77dac80d5bdcc3c3b96be2f2226bf9e7b622635d57518cf2dff9e200773751064a0cf11dc43365caa395440a121a447cecaa611511dc4f082716d591a9e897011c99146ba87db87d7f188cd62d25ccdc17606ccea794c81a6c40c9ca6b4bb9330c8bb098e7212ec96af65817af3a6ad94a8c2e3807656275fe0689181f9ea2ff58d244e05992197d4b9bf678dbbc84134c03edde72ee09d1e4aa9d11ae1d4ffda0af805d27a16b137547faf0d9eb1f146a5c89d89a2b967dc70c4521bb70410cf9368c6c9b22db7cacd09793f57bed8160e7b9949532b4a80278b49bc150dd1f0a471243cf9d6c5810ce6deb69f767ddc9cb083697f3fc0769959cd6388ceaea98e62f17e05cb0b33ac6aafb11e9daa71a1a13881ed2d6a011db30765cab1a9b0ad567325852097d17ea135b0222627df957457f611a3bbd76089c5764871ec4fcc3c78ea215ce210725447e5cd675a7b882b94261ad1d88e6428e7552137f544fc63db238a3035fbc12be4953e8f614487b731d640d68cfeec6f592b373d3b53a612e2d55dfa9d85e0fcddecee4b01a02c83338ab0590c089c0e73ca1f4a49454c0d8245d4374c5805b76e3a10bc468edaa1f1e63a6b56a5c4eb55528573b8eee49cd8cbba360148f999796615a6be2311fc2715189a435cee2858a41ff506d2cf95d0d945b77339bb1c3fe610fafc7992c01c8ba18d06d4e448ca1bada8afc34c7ebafe4cb47f1a8bd3356c360d51ef9b44f118e5321d925428669a50480c7f87b63021573b1a044b2dc7a67a4dcebe0e8a717300caeb8acc85d350b4939120be86b559893d6bdb04b30e88e2ef9a326e51c4cc6022273cf76fcc6b45222ab0cc38892940f8e7ffb201068598d4f3ca4a29c7b0e55e80332493f1af5cc2d7bd8be499755860a823dbc5a64a989cc436a5bee54f4a1a5123e904d701b3b8a327d0b410a3a9034cae6d2e04197588c51d7cd8b85f8868986575f2815c201f352f0df68c2cfc8428c5f611a10f93f49fdfe250d7db12d70e15a5503f655256d948f918b8bb439eb2b04b0bc051ecb9a32cb0a6b0f7ad8b08dd3c2293d42a29717c1841128288dc9387461f09423d4c8a39ce2dfbe57e5e198672d45c11832c3e935c204b48c941bcf7da6c89349e796a4935f70876256d36d126e3dbee110337a78d528f78a8ed96c23fb7596c2bde5ae8302f14703bff57c7219241649c59d4048886c76a9668111a82c4bc43fbc3482bb27814e61c4c7f27832f3c19886e448f8e374071cdcb8df5085ef84fd5802b7bbc0d586afde9fab6c26e98ab37107110aba302f2788d4107646b0779c6eea0329931e9aaa2445de24b51ef1f3fab57cd8e5d7188494c1cfc77253515185e74f5f3e27ddba3c90b8d7e4bb7fa1cdd74e88c43f44eb2635dbca4c62b2a467952e6ece08c94969d9c69329efe81eadf363f5da696a76637650c9815a47107f2293efd6fe87653ab3422a32b0e4bc4db2eb8e8617396b356c24261d4e70b950c74e4a91c8f9044a64cf11e18e20db9332ddc1c6ec73341e06a312a89311add6fcc23dc38d724542bb5e2e78c4512c8dae4945bb455851356abd0580f59cd87695cd891bd5e980df2e33b547a68ac850563ee1d588a63faf06dab65796cc089396777deae2ef2e15e62e8e8110dbd561d8588a9c3870366e361a3fb0690fd0ec602269c3c6bab9e2b339d84b8314a7658fed07169f8258a3ee46d423a2a2740bf6fcd627ae830b5ff1ff04163e10e98cfb02fd99ac1c9161b3bae497c6208c2d1ff549a31486b4cfc85fd6f492803e1be9ad9d1da54855dd2fbb7bd5dfb63dec8c380136c8643d5406b895042c82bf761ba6ab908b67387503f1ade6dd6d7217d9b72c8be7c9011e1b23658ae3b4ee8faa2f0d62ccae53b749b2deed06afb08dd166a9a17000caf27555a9cc421f5d05c4d403a9ad5c808726e0cc6c5e5a79eeafd00ff4b6c0ef7ad18da460ce003f9a3fcae7ba88d5c2f0b0f4b23724650668bc753c4f9f4cf31677f503805754282727435befde74a1233e6f54a917b1d5e417917affe06a8cff175a568fdbc44a1b69474ac37a5d9855d9386dc6b5d854c9abc9448507c79100bf6a6488569b21d656bb0a1b1cdb6418aca4fa48a892a1e8db9748188bed55bcd82bdc536cb767e41502b1fe73ebcedd32c1c49889029e3fbdfb295f54059a13b3b2a7bb8718390eaac267978a531f91df0617cdf50c0a5540f5e555e06edee156aee9039880f1d052d1cf5315bee086328550f490731611cefbea9aef8c83672e732b3861fc0522d44a4e7d799fa900c38620f16414a3296d3839e7581dbdcf3808de5d8333d5270cfcd05cd6e47ec5633d3658be53ba7d54a5f69d88326fcdb7c7e430bf21c6952a11815a3b60f8d47bbf5ecf5799ad2d2c591a6c3f8c36961302eb3f119a4f1219d349b856be847ba674c2733069252baa029968c8657472ec74da02aa23ca9103b20676ef7bf05f42a297839f147f5a5cb851d4d7a22529f95702ef455763b461dae1c139b496e835b9a2a08b1e018c4a834d76dcb3e89d32c373ba88035555bfb20a902d50cf9c7013ac9c8fbfb23b6bd9ee1f595b8de0c630dcefe5335f97865ef66d83ba3d93e0ddb276f79f1ba69993f212174e517616885e51c564e66655ca2eed3440cfec5d60327530aaf93cfb9dfef6d341e8b4e77d8403a2815444c79dfcc4fb86fb97a5e91a3263433c0bac4f5c6a34bc61a3ad7675bae6e9d90e2608b75ae3b6869df372c092beca8e15a62d8808b3fded164389035585da331c70ed732ac087e15fa9d2b36585c6e1e6f4d874182b61c62a300f71e280aa3fc03182825aa54dcb872dee7c776644d7df96c527ed3ec935e77a96524e3e1b883be101c2a14f41f6804133f57834665e7f0ad67745502cdc31491243f550f8492e0ef1906a6b19a8d913d7775aa81f7aac29ad2c0860faf594e12fd86eee68c47847aa2492e0a49cd120cb0a2996ab8964be14efb0f2e59b802dcc493fad9e7c7bd50fdcd253898f241751d91682354a236766e619b9d9a9423332444d400b5cf6b1d4bdb659766153a9ece9484309223718b47ed0da2e1e0e72fb54b92a268188d30f8382b0d22dbced59ce913924669d7b7f1efae13a19ba089bd7e64febb4ecdf457e6be5b3b98f404d11e80c78769a78f67963dbfd4620f8a9d33bac3e90d4786d5896a96161edc7439029f13c4ae04cfe542affea7fb76ec7e32c2cb69d81a6e4bcd03854f9a0f578c0f23b98388caf92c5f3a365e2d1688ec7cfae52d8ac1e15dca10d9352ffed844ae2008435c73e3b66e531cec13ca8f8fefaf1fe60556e6b5b974ea343bad9abf91e3b008047ed4baed65fbfce926eb9face8afbcff3fd2a6d690b97ae26b3fce6ac11d23fab56041936adaf4941ca6777740f714bb1227cd04535735baa406f0a322b49aea720b7658e277ef4ec7121aa381232a7e5656273efc2fce1643a5c6d1df9b6d0e9961b0e9a2a77733c73648bd6ca19134b21df181d7c849e9cd878d3aaeb60fca9e5c6e2f014066dae9d604c69910f7f2e107329ebc410c44b47255577cbe7a667fe3359c2c2f1e0911e2b288a664aa2c57e3088c9359043049dd4b11b449c2aa915a5bb6143514fd401a94e8edd86c7edd8abad7cac744648768b8c2895b4b5ec8d519f629329ae162be47a5487b312fef5c81080477eb906cc83b49aa6419b6451e026c3993dff7bbe0d650728716274b95944cce94a683069ac8dbe0ec318d3b14b8f508baf4023200cdcb3d1db53596f24fc8f356bcd04a9523871004d55baccebd1c551ea9a276d862ed6d663f12076d33c2e8ca7cd09679807f557b273e44d87a5fae6445dc411636f5be828b1664cfba540e5e2c3332ffa3f8f572320297f307afeeec88c5b9c30a1ac95e06f7dcfbc45dba908506a8d7c4ffd6058ca38aa745ea4b60f66d1289b349ab0d8a60b00ef7b659f383c2769fe9c497c68432e0e4945f0f1a9d9c83388d373658d4b6f5364c8e74cd0a000e379f677e2b9319758e23400a86b621c07f35419eb0bf8ea417333963a528a6fa30f88a59b96e3d4dd27f385efea63303f277ed77a8195991bdc5dcea3a7a2e7b9434142e2eed56909c9e9a8d6bc744539ccfdfa9ebdf8be9baee4212eb995a374ec0fbd5ec4d87976416bca328421a59bd29f50f0ee2b5fd3193e73d7ef8a512ab5975dfac0253169eee3299369fbd05d8503ea66b38c791b8775bf7c0c5a3b41cd0e83fa49f8b84cbad7bc73a8b08f228bb92e15df5e32d09e387fbed3700f629fc81a2e9642197a2e718f9c2357f00b353343475a6c7b34ff929e089d8a2c609f92fcba0e92d737369d904f2ba8dfb3d6dc8739c3706d5c297697ba614aa22de7e01378e3c22da13f48d301997c26ec549d44affb719f14b48a7498af06011fbd2ca54ba47f514ab0d8b27bf616553a4d70243c3834c9adc49e1db7277c60bd37947ceac32e96893b34f944433aa659824a1151be18e1edc9bd1dc0a43d1750d9efcd284eec35824046159f766301e55165ccdc40f3bd021e47fde4fc4a8771d6840aefec28ca6d57f701650ac0b9196dc68841f173ad4184cd08d16f00b269d2e780947d86fe764f7973</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Ops！这篇文章博主似乎不想透露！</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>diary</category>
      </categories>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog-revision</title>
    <url>/Blog-revision/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Warning！！请停止窥探隐私行为！！您的IP已经被记录！！" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a26c278eecd2fab172fa1b2158d5a42025538a27987570d782c3e15572e97644">d370c5caa6f82aab46a5e5036abddd9543c4ce41c602d3efdf5140155f25e5ed217cf306aa2dc947e0d47ccc5d85555a2b8c09ae4a6fe79563e460e9ee59a9a704bc416d7dc14e0a6910ff36f822306a2b79727cc7ca91de70531260bde17e8223c099c637156dc2576b226090141f69e11d07e666314d3dab18a6055e8fe65e9fdc918187330101ed9c6c8fb3f6f08761543237cd5f4698bcb15ad89da858543b2dacf97c91acec85ed32a4d7f2d1eb0b2976d61c0a2fda15abccdaee98eb24f9d6eeb43e813a36106b4e51e270bd06a086a24a274d9e190392dc446cc35922a36e2c1d1ebe3467eb2e864a3e961ecd9dd91fc2febdb9568055245dd1f5b18e15c8bc6fab695b0064358e2eec35625cc8b9b462bfbb7be3e00fd273919ebb717fc2c2402d32649ba1a89e9e023e8f852cbde1983e661d4331fd7f202014caa51f84685de4116330c7e5bfd48b10cf7299113557e78606cb11cbe9710772dc12fb82ff41b6f2f4fd1140e7cc1573b2b494fce8dadb2e3a762ccf0cab543633fb3d1d5f592f5f0b6adfc2e5886bb4c856de8cb75164e10417c60d699a5b5da487b798a7e4275659544273ef0b0e0eadc120e67ca2d0233957e6357b674e4a591640bebdf1df6cde106725148b988419407d20a273799b77def6c9519c3c7a0913f0e6d0288a9e3bc81475e69738dfa2d3a795126cf31413b923ed48f30dcdc138c2eb419d1f4816098e6eeccdd423653eb12c39eaeea2a3a727c2d834b8e4aa7e5bcfff07790f0a48db32d871ec3621063ce1b80f7ae5cfed336e3bb869fae1118d081828dc15e6eb9f83102331b868e530aa561e1483f22031382a540c0c545b6ae559e6d0eac5e71b1abe8effd96f9f0a591ff8ea326575641a54ccdb201457dbdb4227627c31bcc8019234703b2ca735ce7b9c97222a3df040069355bc8c5a80b0e48d5a0266e270fa4a86d0c20b4d5ff6afcc084041dfdc569187dbdd2b52016e1743208a88ef10e25d3a77264694b30f7beb2c355fb3d7b0b04053742e81748c024046da9549dde0c85e72030c4d457fe26ed6892fc4991c037bdbc3e85a526a3246d9748814f38e8e52ae1d9eef594f0063030ad14da6882be8ad2a05f5ae5436676caddca98f3e487207ade5529a88b6f025f895986fd01cdbb01cd073</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Ops！这篇文章博主似乎不想透露！</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>diary</tag>
      </tags>
  </entry>
  <entry>
    <title>csgo-cfg</title>
    <url>/csgo-cfg/</url>
    <content><![CDATA[<h1 id="stream"><a href="#stream" class="headerlink" title="stream"></a>stream</h1><p>云存储个人csgo的配置，方便随时复制应用：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">cl_crosshair_drawoutline "0"</span><br><span class="line">cl_crosshair_dynamic_maxdist_splitratio "0.300000"</span><br><span class="line">cl_crosshair_dynamic_splitalpha_innermod "1"</span><br><span class="line">cl_crosshair_dynamic_splitalpha_outermod "0.5"</span><br><span class="line">cl_crosshair_dynamic_splitdist "7"</span><br><span class="line">cl_crosshair_friendly_warning "1"</span><br><span class="line">cl_crosshair_outlinethickness "1.000000"</span><br><span class="line">cl_crosshair_sniper_show_normal_inaccuracy "0"</span><br><span class="line">cl_crosshair_sniper_width "1"</span><br><span class="line">cl_crosshair_t "0"</span><br><span class="line">cl_crosshairalpha "250"</span><br><span class="line">cl_crosshaircolor "1"</span><br><span class="line">cl_crosshaircolor_b "144"</span><br><span class="line">cl_crosshaircolor_g "195"</span><br><span class="line">cl_crosshaircolor_r "27"</span><br><span class="line">cl_crosshairdot "0"</span><br><span class="line">cl_crosshairgap "-2"</span><br><span class="line">cl_crosshairgap_useweaponvalue "0"</span><br><span class="line">cl_crosshairsize "2"</span><br><span class="line">cl_crosshairstyle "4"</span><br><span class="line">cl_crosshairthickness "0.5"</span><br><span class="line">cl_crosshairusealpha "1"</span><br><span class="line">cl_fixedcrosshairgap "3"</span><br><span class="line">cl_viewmodel_shift_left_amt "1.5"</span><br><span class="line">cl_viewmodel_shift_right_amt "0.75"</span><br><span class="line">viewmodel_fov "60"</span><br><span class="line">viewmodel_offset_x "0"</span><br><span class="line">viewmodel_offset_y "1"</span><br><span class="line">viewmodel_offset_z "-2"</span><br><span class="line">viewmodel_presetpos "0"</span><br><span class="line">viewmodel_recoil "0"</span><br><span class="line">cl_bob_lower_amt "21"</span><br><span class="line">cl_bobamt_lat "0.33"</span><br><span class="line">cl_bobamt_vert "0.14"</span><br><span class="line">cl_bobcycle "0.980000"</span><br><span class="line">cl_hud_background_alpha "0.5"</span><br><span class="line">cl_hud_bomb_under_radar "1"</span><br><span class="line">cl_hud_color "0"</span><br><span class="line">cl_hud_healthammo_style "0"</span><br><span class="line">cl_hud_playercount_pos "0"</span><br><span class="line">cl_hud_playercount_showcount "0"</span><br><span class="line">cl_hud_radar_scale "1.1"</span><br><span class="line">hud_scaling "0.950000"</span><br><span class="line">hud_showtargetid "1"</span><br><span class="line">cl_righthand "0"</span><br><span class="line">cl_color "2"</span><br><span class="line">cl_radar_always_centered "0"</span><br><span class="line">cl_radar_icon_scale_min "0.7"</span><br><span class="line">cl_radar_rotate "1"</span><br><span class="line">cl_radar_scale "0.3"</span><br><span class="line">cl_radar_square_with_scoreboard "1"</span><br></pre></td></tr></tbody></table></figure>
]]></content>
      <categories>
        <category>game</category>
      </categories>
      <tags>
        <tag>csgo</tag>
        <tag>cfg</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown basical syntax</title>
    <url>/Markdown-basical-syntax/</url>
    <content><![CDATA[<h2 id="换行、段落"><a href="#换行、段落" class="headerlink" title="换行、段落"></a>换行、段落</h2><blockquote>
<p>换行：两个空格<br>段落： 一行空行</p>
</blockquote>
<h2 id="粗体、斜体"><a href="#粗体、斜体" class="headerlink" title="粗体、斜体"></a>粗体、斜体</h2><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">** text ** </span><br><span class="line"> * text * </span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p><strong>note</strong> : <em>注意markdown中的符号后面的空格</em></p>
</blockquote>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">1. xxx</span><br><span class="line">2. xxx</span><br><span class="line">3. xxx</span><br></pre></td></tr></tbody></table></figure>

<h2 id="链接、图片"><a href="#链接、图片" class="headerlink" title="链接、图片"></a>链接、图片</h2><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">链接[source](link "description")</span><br><span class="line">图片 ![](path "title")</span><br></pre></td></tr></tbody></table></figure>

<h2 id="转义字符-‘-‘"><a href="#转义字符-‘-‘" class="headerlink" title="转义字符 ‘\‘"></a>转义字符 ‘\‘</h2><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></tbody></table></figure>

<p>单元格合并 ：<br>属于markdown扩展语法，需要markdown渲染器的支持，不支持没效果，记录一下，万一以后支持呢。</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">&gt; 或 空 ： 横向框合并</span><br><span class="line">    ^ : 纵向框合并 ```</span><br><span class="line">表格工具： [点击试用](https://kz16.top/ckeditor/)</span><br><span class="line"></span><br><span class="line">## 代码</span><br><span class="line"></span><br><span class="line">&gt; 行内插入代码 ： \` code \`</span><br><span class="line">&gt; 多行代码：</span><br><span class="line">&gt; - \`\`\` code  \`\`\`</span><br><span class="line">&gt; - 四个空格或者tab缩进</span><br><span class="line"></span><br><span class="line">代码进行语法高亮</span><br><span class="line">&gt;\`\`\` python  </span><br><span class="line">&gt; python code</span><br><span class="line">&gt;\`\`\`  </span><br><span class="line"></span><br><span class="line">即在\`\`\`后标明 code的语言  </span><br><span class="line"></span><br><span class="line">## Emoji</span><br><span class="line"></span><br><span class="line">` :joy: ` </span><br><span class="line"></span><br><span class="line">示例： 这是开心的表情 :joy:    </span><br><span class="line">如果上面没有出现表情，说明渲染器不支持emoji的渲染。需要安装额外插件</span><br><span class="line">更多表情简码列表，[点击这里](https://gist.github.com/rxaviers/7360908)</span><br><span class="line"></span><br><span class="line">## 改变字体颜色</span><br><span class="line"></span><br><span class="line">markdown不支持改变字体颜色，但是支持html语法  </span><br><span class="line">通过`&lt;font color=green size=7 face="黑体"&gt; font &lt;/font&gt;`</span><br><span class="line"></span><br><span class="line">## 公式</span><br><span class="line"></span><br><span class="line">```text</span><br><span class="line">$公式$  #行内插入</span><br><span class="line">$$公式$$ # 单独一行 </span><br></pre></td></tr></tbody></table></figure>

<p>$$ f(x)=sin(x)$$<br>如果上述公式看不到效果，检查markdown编辑器或者渲染插件是否安装了math插件。</p>
<p>公式工具：<a href="https://kz16.top/latex/symbol/">点击使用</a><br>公式速查：</p>
<h2 id="flowchart"><a href="#flowchart" class="headerlink" title="flowchart"></a>flowchart</h2><p>能看到flowchart的前提是有解析工具，比如 markdown preview插件，提前生成，才能看到<br>hexo主题需要额外安装flowchart插件以支持渲染。</p>
<p>markdown图表类型支持： 流程图(mermaid/flow)、时序图(sequence)、甘特图(mermaid)<br>语法：(需要在开头注明mermaid类型,此处被自动省略)</p>
<pre class="mermaid">st=&gt;start: 开始框
op=&gt;operation: 处理框
cond=&gt;condition: 判断框(是或否?)
sub1=&gt;subroutine: 子流程
io=&gt;inputoutput: 输入输出框
e=&gt;end: 结束框
st(right)-&gt;op(right)-&gt;cond
cond(yes)-&gt;io(bottom)-&gt;e
cond(no)-&gt;sub1(right)-&gt;op</pre>

<p>可以看出语法繁琐，记得很多。<br>下面是mermaid插件提供的语法</p>
<pre class="mermaid">graph LR
A[方形] --&gt;B(圆角)
    B --&gt; C{条件a}
    C --&gt;|a=1| D[结果1]
    C --&gt;|a=2| E[结果2]
    F[横向流程图]</pre>

<p>更多：<br><a href="https://zhuanlan.zhihu.com/p/355997933">用mermaid画图</a></p>
<p>效果:</p>
<pre class="mermaid">graph LR
A[方形] --&gt;B(圆角)
    B --&gt; C{条件a}
    C --&gt;|a=1| D[结果1]
    C --&gt;|a=2| E[结果2]
    F[横向流程图]</pre>

<pre class="mermaid">pie
    title 为什么总是宅在家里？
    "喜欢宅" : 15
    "天气太热或太冷" : 20
    "穷" : 500</pre>

<h2 id="reference"><a href="#reference" class="headerlink" title="reference"></a><em><strong>reference</strong></em></h2><p>其他的汇总：</p>
<ul>
<li><a href="https://markdown.com.cn/">官方docs</a></li>
<li><a href="https://kz16.top/md/#markdown%E7%BB%88%E6%9E%81%E6%95%99%E7%A8%8B">终极教程</a></li>
<li><a href="https://www.runoob.com/markdown/md-advance.html">runnoob菜鸟教程高级技巧</a></li>
</ul>
<blockquote class="blockquote-center">
<p>中国人很擅长抽象， 化繁为简是好事，但总会丢了灵魂<br>都是知道了该怎么做就开始抽象。而不是知道了为什么这么做再开始抽象。浮躁。 说到底，还是把握不住精髓。</p>

</blockquote>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>how to build with hexo</title>
    <url>/how-to-build-with-hexo/</url>
    <content><![CDATA[<p>采用hexo这种静态页面的博客是无奈之举，因为云服务器+jupyter方式确实方便，最终云服务器到期了。<br>看了教程也是头疼，做下来感觉就是”难不会，会不难“。<br>简单来说就是hexo+ github pages，hexo需要用到nodejs+npm，github pages需要用到git。<br>先无脑跟着教程做一遍，再去体会</p>
<h1 id="hexo-github-pages"><a href="#hexo-github-pages" class="headerlink" title="hexo + github pages"></a>hexo + github pages</h1><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>博客框架</p>
<h2 id="nodejs-npm-git"><a href="#nodejs-npm-git" class="headerlink" title="nodejs + npm + git"></a>nodejs + npm + git</h2><p>nodejs： <a href="https://nodejs.org/en">网址下载</a></p>
<blockquote>
<p>note ： 从官网安装的版本自带npm，无需额外安装。但是通过shell apt安装则需要单独安装nodejs+npm</p>
</blockquote>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt install nodejs</span><br><span class="line">sudo apt install npm</span><br></pre></td></tr></tbody></table></figure>

<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>git : <code>apt install git</code><br>安装好git后，还需要设置：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">git config --global user.name xxx</span><br><span class="line">git config --global user.email xxx@gmail.com</span><br></pre></td></tr></tbody></table></figure>
<p>因为我们需要把生成的博客页面上传到github仓库里面。还需要获取仓库的访问权限，也就是将本地密钥放到ssh key里面<br>生成密钥（rsa）：<br><code>ssh-keygen -t rsa -C email@gmail.com</code></p>
<blockquote>
<p>windows： C:/user/[username]/.ssh/id_rsa.pub<br>linux : ~/.ssh/id_rsa.pub </p>
</blockquote>
<h2 id="github-repo"><a href="#github-repo" class="headerlink" title="github repo"></a>github repo</h2><p>创建github 新的 repo，repo的名字一定是 <em><strong>[your_name].github.io</strong></em></p>
<blockquote>
<p>note： 名字不是上述形式的话，会出现本地渲染正常，但是上传到github pages里面后打开没有任何样式。</p>
</blockquote>
<blockquote>
<p>note: 创建好之后，我们不必根据github的提示在本地初始化一个github仓库。后面设置好之后hexo-deployer-git工具会自动提交到这个仓库。  </p>
</blockquote>
<h2 id="npm-hexo"><a href="#npm-hexo" class="headerlink" title="npm + hexo"></a>npm + hexo</h2><p>安装hexo ， 以下是常用的hexo命令：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">hexo clean  </span><br><span class="line">hexo generate # hexo g  </span><br><span class="line">hexo server   # hexo s  </span><br><span class="line">hexo deploy   # hexo d  将本地的hexo generate之后文件部署到github仓库，一般是通过hexo-deployer-git工具自动部署</span><br></pre></td></tr></tbody></table></figure>

<p>这里分为两种情况：</p>
<h3 id="新创建的仓库"><a href="#新创建的仓库" class="headerlink" title="新创建的仓库"></a>新创建的仓库</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">npm install hexo-cli -g	  #安装hexo</span><br><span class="line">hexo init your_blog_name  #hexo 新建一个blog项目框架</span><br><span class="line">cd your_blog_name         # 进入blog项目文件夹下</span><br><span class="line">npm install               # 初始化安装必要的文件</span><br><span class="line">hexo server               # 也可以写为hexo s , 意思是开启本地一个服务，可以直接访问 localhost:4000 查看初始化好的hexo页面。</span><br></pre></td></tr></tbody></table></figure>

<h3 id="已经存在github上面的hexo仓库"><a href="#已经存在github上面的hexo仓库" class="headerlink" title="已经存在github上面的hexo仓库"></a>已经存在github上面的hexo仓库</h3><figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">npm install hexo-cli -g		  #安装hexo</span><br><span class="line">git clone your_repo_addr.git</span><br><span class="line">cd your_repo_addr</span><br><span class="line">npm install</span><br></pre></td></tr></tbody></table></figure>
<h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>在Hexo中有两份主要的配置文件，其名称都是 <em>_config.yml</em>。其中，一份位于 Hexo 根目录下，主要包含 Hexo本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。  前者称为 <strong>站点配置文件</strong> ， 后者称为 <strong>主题配置文件</strong> 。</p>
<ul>
<li><p>站点配置文件<br>下面是站点配置文件需要修改的地方：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">title ： 网页的名称</span><br><span class="line">url ： https://your_name.github.io/your_name.github.io  #github repo的setting --&gt; pages </span><br><span class="line">root: /  #root在url下面，没有可以加上</span><br><span class="line"></span><br><span class="line">theme：file_name_in_themes  # theme名字就是 themes目录下，主题文件夹名称。文件夹名称可以自己更改</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/your_name/your_name.github.io</span><br><span class="line">  branch: gh-pages</span><br></pre></td></tr></tbody></table></figure>
<p>deploy配置主要是用作hexo d，也就是 hexo-deployer-git插件会用到的地方。<br>主要是用作指定github创建的仓库位置及上传到哪个分支。这里分支名为gh-pages，也可以自己指定。</p>
</li>
<li><p>主题配置文件<br>主题配置文件大部分不需要配置，对页面功能有要求的可以自行了解。</p>
</li>
</ul>
<p>安装hexo-deployer-git： <code>npm install hexo-deployer-git --save</code><br>当我们配置好之后就可以执行<code>hexo clean &amp;&amp; hexo g -d</code>进行部署到github，然后通过url查看效果<br>当然部署之前可以本地localhost:4000查看：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g &amp;&amp; hexo s</span><br></pre></td></tr></tbody></table></figure>

<h2 id="编写markdown"><a href="#编写markdown" class="headerlink" title="编写markdown"></a>编写markdown</h2><p>hexo配置好了，默认主题就是landscape，不考虑换的话，就应该做该做的写博客了。</p>
<ol>
<li><p>创建新的文章： <code>hexo new "post title"</code></p>
</li>
<li><p>source_posts 目录下的xxx.md就是刚刚创建的博客内容，格式是markdown</p>
</li>
</ol>
<h2 id="push"><a href="#push" class="headerlink" title="push"></a>push</h2><p>我个人建议最好做一份本地文件的存档，真正做到“云博客”，换个场景之后，可以把文件从分支上clone下来，配置好本地环境即可接着编辑博客。</p>
<p>我选择上传文件到main分支，main分支远程仓库暂时没有</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">git init       #初始化本地git仓库</span><br><span class="line">hexo clean     # 清楚多余的生成文件，保留原始文件</span><br><span class="line">git checkout -b main  #创建并切换到本地新分支</span><br><span class="line">git add * 				 #将改动提交到本地新分支</span><br><span class="line">git commit -m "upload hexo files"</span><br><span class="line">git remote add origin url       #关联远程分支</span><br><span class="line">git push -u origin main</span><br></pre></td></tr></tbody></table></figure>

<h1 id="更换合适的主题"><a href="#更换合适的主题" class="headerlink" title="更换合适的主题"></a>更换合适的主题</h1><p>theme 主题一直是hexo的亮点。找到适合自己的主题，体面，酷炫，一直是bloger最浪费时间的工作。<br>主题才是真的需要熟悉的地方。我觉得这才是hexo的门槛所在。<br>我自从搭建了hexo以来，感觉一直在花费时间换各种各样的主题，尝试每个主题不同的功能。  </p>
<p>在没找到好看的主题之前，这里就保存一下自己换过的主题用了哪些功能吧<br>因为LiveForCode 简单试用过之后就放弃了，主要是因为感觉还是要注重内容本身，不能搞的花里胡哨（虽然好的页面也可以令人心情愉悦，提升阅读体验）</p>
<p>所以还是从万人敬仰的NexT开始记录吧。</p>
<h2 id="NexT"><a href="#NexT" class="headerlink" title="NexT"></a>NexT</h2><ul>
<li>修改字体大小到0.9：我觉得默认的hexo博客标题字体都偏大，看着很不舒服.0.9我觉得正好。故调整了global字段</li>
</ul>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">font:</span><br><span class="line">  #enable: false</span><br><span class="line">  enable: true   #改为true应用修改</span><br><span class="line">...</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lato</span><br><span class="line">    size: 0.9  # 改变值</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p><code>scheme</code> ：<br>Gemini， NexT还提供四种页面布局可选，比较中意的是第四种，Gemini。<br>或许后面页面功能玩的熟练了，搭配其他的也可以。</p>
</li>
<li><p><code>menu</code><br>添加了 Home ，tags， Categories ， Archives<br>其余的about，schedule， sitemap， comonweal，还没定义。就不放上去了。但是tags 和categories还是不能用。</p>
</li>
<li><p><code>social link</code> : github + email</p>
</li>
<li><p><code>categories</code>和<code>tag</code>，/tags/ &amp; /categories/ 里面的index.md内 type 字段值要和 _config.yml设置的保持一致。</p>
</li>
<li><p>首页内容折叠<code>excerpt</code>： hexo7.8版本以上支持自动截图摘要功能，需要以下安装<code>npm install hexo-excerpt --save</code></p>
</li>
</ul>
<blockquote>
<p><code>--save</code>的作用主要是将安装的插件记录到 package-lock.json &amp; package.json中<br>在新的仓库中执行npm install 其实就是读取或生成package-lock.json&amp; package.json 安装仓库的原有的环境里面的插件。<br>然后更改站点配置：</p>
</blockquote>
<figure class="highlight json"><table><tbody><tr><td class="code"><pre><span class="line">excerpt<span class="punctuation">:</span></span><br><span class="line">  depth<span class="punctuation">:</span> <span class="number">10</span></span><br><span class="line">  excerpt_excludes<span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">  more_excludes<span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">  hideWholePostExcerpts<span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><code>local_search</code> : blog内容搜索，感觉这个功能主要给博客主自己用 安装：<code>npm install hexo-generator-searchdb --save</code></li>
</ul>
<p>然后更改站点配置：</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br></pre></td></tr></tbody></table></figure>

<p>在主题配置中启用：</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p><code>tag-plugins</code> : 意思是通过给文本、图片等打上一些标签从而实现一些特殊的效果<br>For more info: <a href="https://theme-next.js.org/docs/tag-plugins/">Tag Plugins introduc</a><br>注意： 这不属于markdown的语法，而是hexo在渲染时候的功能</p>
</li>
<li><p><code>emoji</code>:  通过shortcode使用表情， hexo默认的markdown渲染器hexo-render-marked不支持渲染emoji<br>可以通过更改支持的渲染器来解决。但是我不想大动干戈，本着emoji能用就行的心态，装个插件:   <code>npm install hexo-filter-github-emojis --save</code></p>
</li>
</ul>
<p>修改站点配置文件：</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">githubEmojis:</span><br><span class="line">  enable: true</span><br><span class="line">  className: github-emoji</span><br><span class="line">  inject: true</span><br><span class="line">  styles:</span><br><span class="line">  customEmojis:</span><br></pre></td></tr></tbody></table></figure>

<ul>
<li><p><code>flowchart/mermaid</code> ： 在next主题配置文件中找到mermaid 字段，enable 改为true<br>尽量使用mermaid ，似乎flowchart语法，在手机上浏览网页会让页面错误。</p>
</li>
<li><p>插入图片： 站点配置文件中post_assert_floder改为true， 这样hexo new post时就会创建对应的文件夹。<br>注意： 插入图片时应该使用 post_floder_name/image_name.type 路径来引用图片。 插入图片不需要安装其他任何插件，不显示就是路径设置错误  </p>
</li>
<li><p>文章置顶：<span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://github.com/im0o/hexo-generator-index-custom/blob/master/README_zh.md">reference</a></p>
</li>
</ul>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm uninstall hexo-generator-index</span><br><span class="line">npm install hexo-generator-index-custom --save</span><br></pre></td></tr></tbody></table></figure>

<p>站点配置文件中的index_generator部分不需要改，完全兼容！<br>在文章开头添加 sticky 或 top 参数， 其值可以是 true（置顶） 或者 数字，数据越大，越排在前面。<br>hide参数可以隐藏文章</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Ideas</span><br><span class="line">date: 2020-05-06 09:59:10</span><br><span class="line">tags: ideas</span><br><span class="line">categories: daily_note</span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure>

<hr>
<p>(end)</p>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a><strong>reference</strong></h1><p>在使用NexT中参考了很多前辈的配置过程，在此感谢！<br>hexo官方文档： <a href="https://hexo.io/themes/">主要是选择主题</a><br>NexT官方参考文档： <a href="https://theme-next.js.org/docs/getting-started/">Getting Started</a><br>比较全的主题功能配置： <a href="https://www.meijindong.com/posts/3688165485.html">点此前往查看</a><br>hexo提供的plugins： <a href="https://hexo.io/plugins/">插件一览，要啥找啥</a></p>
<blockquote class="blockquote-center">
<p>集中力量办大事无法调动积极性，只会滋生投机份子</p>

</blockquote>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>stable diffusion</title>
    <url>/stable-diffusion/</url>
    <content><![CDATA[<h1 id="History"><a href="#History" class="headerlink" title="History"></a>History</h1><p>为什么可以从文字输出图像？<br>首先得复习一下机器学习。</p>
<h2 id="Relate"><a href="#Relate" class="headerlink" title="Relate"></a>Relate</h2><p>当下ai绘画主流产品：MidJourney ，stable-diffusion， DALL·E</p>
<table>
<thead>
<tr>
<th>产品</th>
<th>特点</th>
<th>共同点</th>
</tr>
</thead>
<tbody><tr>
<td>MidJourney</td>
<td>收费</td>
<td>三款产品都是可以根据text形式prompt(提示词)来生成图片也可以根据图片来修改。</td>
</tr>
<tr>
<td>DALL-E</td>
<td>openai 产品之一，著名的是其语言模型gpt-4 ，ofcourse，收费。</td>
<td>^</td>
</tr>
<tr>
<td>stable-diffusion</td>
<td>开源免费，适合商用</td>
<td>^</td>
</tr>
</tbody></table>
<h2 id="Requisite"><a href="#Requisite" class="headerlink" title="Requisite"></a>Requisite</h2><ul>
<li><p>潜空间</p>
</li>
<li><p>UNet神经网络</p>
</li>
<li><p>调度算法Scheduling</p>
</li>
<li><p>扩散diffusion</p>
</li>
<li><p>生成过程<br><img src="/stable-diffusion/image.jpg" alt="图像生成过程"></p>
</li>
</ul>
<hr>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Prompt</td>
<td align="center">提示词（正向）</td>
</tr>
<tr>
<td align="center">Negative prompt</td>
<td align="center">消极的提示词（反向）</td>
</tr>
<tr>
<td align="center">Width &amp; Height</td>
<td align="center">要生成的图片尺寸。尺寸越大，越耗性能，耗时越久。</td>
</tr>
<tr>
<td align="center">CFG scale</td>
<td align="center">AI 对描述参数（Prompt）的倾向程度。值越小生成的图片越偏离你的描述，但越符合逻辑；值越大则生成的图片越符合你的描述，但可能不符合逻辑。</td>
</tr>
<tr>
<td align="center">Sampling method</td>
<td align="center">采样方法。有很多种，但只是采样算法上有差别，没有好坏之分，选用适合的即可。</td>
</tr>
<tr>
<td align="center">Sampling steps</td>
<td align="center">采样步长。太小的话采样的随机性会很高，太大的话采样的效率会很低，拒绝概率高(可以理解为没有采样到,采样的结果被舍弃了)。</td>
</tr>
<tr>
<td align="center">Seed</td>
<td align="center">随机数种子。生成每张图片时的随机种子，这个种子是用来作为确定扩散初始状态的基础。不懂的话，用随机的即可。</td>
</tr>
</tbody></table>
<h2 id="env-build-windows"><a href="#env-build-windows" class="headerlink" title="env build - windows"></a>env build - windows</h2><p>click here <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">official guidance of source code</a></p>
<ul>
<li>写在前面的tips<br><strong>请确保显卡驱动更新+ 更改pip源 + git配置，这样安装过程才会一帆风顺</strong><ul>
<li><code>更新venv目录下的 pip版本</code>或<code>pip下载库connect timeout</code>常见问题:<br><code>-i https://pypi.tuna.tsinghua.edu.cn/simple</code><br>或 修改<code>pip.ini</code> (<code>C:\Users\name\AppData\Roaming\pip\pip.ini</code>)：<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">[global]</span><br><span class="line"> index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></tbody></table></figure></li>
<li>git添加代理<ul>
<li>飞机场用户</li>
</ul>
</li>
</ul>
<ol>
<li>到飞机场设置中查看本地监听端口</li>
<li><code>git config --global http.proxy socks5://127.0.0.1:[port] #git全局设置</code></li>
</ol>
<ul>
<li>VPN用户</li>
</ul>
<ol>
<li>端口是配置vpn是设置的本地监听端口</li>
<li><code>git config --global http.https://github.com.proxy socks5://127.0.0.1:[port] #专门给github设置</code></li>
</ol>
</li>
</ul>
<ol>
<li>全自动安装包 <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://nerdschalk.com/install-stable-diffusion-windows/">详细的指南(包括支持AMD显卡)</a>  </li>
<li>manually install： (先犯错，再总结)</li>
</ol>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># prepare `python3.10.6(更新的版本不支持torch)+git`</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br><span class="line"><span class="comment"># 更改pip源 + git配置代理（如果没有使用vpn，按照下述，修改目录下launch.py）</span></span><br><span class="line"><span class="comment"># 修改 webui-user.bat :  set COMMANDLINE_ARGS=--xformers --no-gradio-queue</span></span><br><span class="line"><span class="comment"># run webui-user.bat  #不需要管理员权限运行</span></span><br><span class="line"><span class="comment"># #重新安装basisr (下列都可省略，如果出现对应错误情况下)</span></span><br><span class="line"><span class="comment"># #run webui-user.bat</span></span><br><span class="line"><span class="comment"># 等待下载好模型</span></span><br></pre></td></tr></tbody></table></figure>

<ol>
<li>完成安装! 本地浏览器进入 <code>localhost:7860</code> 或<code>127.0.0.1:7860</code></li>
</ol>
<p><img src="/stable-diffusion/finish_install.png" alt="安装完成"></p>
<h3 id="Trouble-Shooting"><a href="#Trouble-Shooting" class="headerlink" title="Trouble Shooting"></a><strong>Trouble Shooting</strong></h3><ul>
<li><p><code>Torch is not able to use GPU</code></p>
<ul>
<li>尝试更新显卡驱动<br>官网下载最新驱动 <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://www.nvidia.in/Download/index.aspx?lang=en">链接</a></li>
<li>更新后删除或重命名stable-diffusion/venv目录</li>
<li>重新执行webui-user.bat</li>
</ul>
</li>
<li><p><code>RuntimeError: Couldn't install gfpgan.</code><br>如果一开始遇到pip install慢或者失败问题，建议按上述修改<code>pip.ini</code>。<br>根本原因是与github连接网络不稳定，小飞机虽然有点用，但全局模式用处不大，可能会成功，但是龟速+失败多，还是建议以下方式：  </p>
<ul>
<li>方法1 ： <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://github.com/CompVis/stable-diffusion/issues/506#issuecomment-1438585062">resulotion</a><br> 将launch.py 中 <code>https://github.com/</code>替换为 <code>https://ghproxy.com/https://github.com/</code></li>
<li>方法2 ： 给git添加代理</li>
</ul>
</li>
<li><p><code>No module 'xformers'. Proceeding without it.</code><br>缺啥补啥，在webui-user.bat里 <code>set COMMANDLINE_ARGS=--xformers</code></p>
</li>
</ul>
<p>关于 xformers : <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Xformers">xformers github page</a><br>简而言之, xformers可以加速图像生成速度,减少VRAM使用, 2023.1.23之前都是需要用户手动安装的,之后<strong>AUTOMATIC111</strong>版本的webui<br>集成了自动安装xformers,但是需要再启动command里添加 –xformers以激活该功能.</p>
<ul>
<li><p><code>ModuleNotFoundError: No module named 'basicsr.version</code><br><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/issues/1598#issuecomment-1501010130">solution</a><br>重新安装basicsr<br><em>该错误根本原因是python库里面没有basicsr库，这个肯定是安装的，就是用的时候没有。<br>由此可以想到，这是本地环境有问题，而非工程问题。应该是没有装到正确的地方。这个问题大部分情况不会出现，因为本人电脑上装过的python太多。  没有其他的裸机去验证。暂时就这样吧。</em></p>
</li>
<li><p>打开后输入prompts时网页右上角显示: <code>Something went wrong Expecting value: line 1 column 1 (char 0)</code>,且运行出错<br><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/issues/9132#issuecomment-1488840066">solution</a><br><code>set COMMANDLINE_ARGS=--xformers --no-gradio-queue</code><br>stable-diffusion支持生成gradio链接, 目的是可以在其他设备也可以访问该服务. 如果本地开了vpn代理,则无法生成.<br>方式就是关闭代理,或禁用gradio生成.</p>
</li>
</ul>
<h2 id="env-build-linux"><a href="#env-build-linux" class="headerlink" title="env build - linux"></a>env build - linux</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt install wget git python3 python3-venv</span><br><span class="line">bash &lt;(wget -qO- https://raw.githubusercontent.com/AUTOMATIC1111/stable-diffusion-webui/master/webui.sh)</span><br><span class="line">sh webui.sh</span><br><span class="line">#check webui-user.sh for options</span><br></pre></td></tr></tbody></table></figure>

<h2 id="env-build-服务器上通过接口调用"><a href="#env-build-服务器上通过接口调用" class="headerlink" title="env build - 服务器上通过接口调用"></a>env build - 服务器上通过接口调用</h2><h2 id="use-case"><a href="#use-case" class="headerlink" title="use-case"></a>use-case</h2><p><img src="/stable-diffusion/aweful_picture.png" alt="垃圾的图像效果"><br>上面图片就是我刚进入网页时随便输入一段话然后生成的结果. 简直…不堪入目 <span class="github-emoji"><span>😱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <span class="github-emoji"><span>😱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😱</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>!!!!</p>
<p>如何进行改善呢?<br>影响图像效果的因素： <code>参数，模型，prompt</code><br>先来熟悉stable-diffusion-webui上面的一些模式</p>
<ul>
<li><p>text2img</p>
</li>
<li><p>text+img2img<br><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://blog.51cto.com/tinygeeker/6185988">几种模式的解释</a><br>以下仅作为巩固记录：  </p>
<table>
<thead>
<tr>
<th>参数</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>resize mode</td>
<td>依此是：<code>拉抻</code>，<code>裁剪</code>，<code>填充</code>，<code>仅调整大小</code>，缩放模式指的是当原图和要生成的图的宽和高不一致的时候，选择的缩放模式，一般选择裁剪，如果原图和生成图的宽高一致的时候，选择任意均可</td>
</tr>
</tbody></table>
</li>
</ul>
<p>一些工具，可能以后会用到：</p>
<ul>
<li><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://vocus.cc/article/640ee135fd8978000155ef23">controlNet 工具</a></li>
</ul>
<hr>
<h1 id="应用–换装预览"><a href="#应用–换装预览" class="headerlink" title="应用–换装预览"></a>应用–换装预览</h1><h2 id="Scenario-1"><a href="#Scenario-1" class="headerlink" title="Scenario 1"></a>Scenario 1</h2><p>淘宝商家给出衣服图片，用ai绘出穿着衣服的人物模型，支持各种场景和人物姿势.<br><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><a href="https://www.zmo.ai/aimodels/"><strong>AI models</strong>样例</a></p>
<ul>
<li>Details</li>
</ul>
<ol>
<li>随机模特模型生成</li>
<li>提供的照片衣服模型结合</li>
</ol>
<h2 id="Scenario-2"><a href="#Scenario-2" class="headerlink" title="Scenario 2"></a>Scenario 2</h2><p>消费者网购衣服，需要预览选中的衣服的效果，不同场合，不同姿势。</p>
<ul>
<li>Details</li>
</ul>
<ol>
<li>消费者人物模型生成</li>
<li>选取衣服模型提取</li>
</ol>
<h2 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h2><p>如何生成不同的models？（训练，）<br>生成的models如何与图片中的衣服结合？</p>
<ol>
<li>client<br>选择衣服，选择预览人物</li>
<li>server<br>根据所选衣服和预览人物，生成提示词，填入后调接口进行生成</li>
<li>生成提示词精准度</li>
<li>提高生成速度</li>
</ol>
<h1 id="Implement"><a href="#Implement" class="headerlink" title="Implement"></a>Implement</h1><p>(待续)</p>
<hr>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a><em><strong>reference</strong></em></h1><ul>
<li><p>模型下载 <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://civitai.com/">点此进入</a></p>
</li>
<li><p>我从这篇简单的入门 <span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://zhuanlan.zhihu.com/p/610094594?utm_id=0">点此学习</a></p>
</li>
<li><p><span class="github-emoji"><span>👉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f449.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <a href="https://zh.wikipedia.org/zh-cn/Stable_Diffusion">wiki是一个很棒的学习方式</a></p>
</li>
<li><p>好玩的AI社区：<a href="https://huggingface.co/spaces/stabilityai/stable-diffusion">这是stable-diffusion的一个样例, 还有例如chatgpt-4的体验空间</a></p>
</li>
<li><p>一些教程:<br> <a href="https://github.com/ivon852/netlify-ivon-blog-comments/discussions/437">湾湾的教程</a></p>
</li>
</ul>
<blockquote class="blockquote-center">
<p>“Do one thing every day that scares you.” –Eleanor Roosevelt</p>

</blockquote>
]]></content>
      <categories>
        <category>project</category>
      </categories>
      <tags>
        <tag>ai绘画</tag>
        <tag>statble-diffusion</tag>
      </tags>
  </entry>
  <entry>
    <title>Ideas</title>
    <url>/ideas/</url>
    <content><![CDATA[<h2 id="智能红绿灯"><a href="#智能红绿灯" class="headerlink" title="智能红绿灯"></a>智能红绿灯</h2><ul>
<li>多车道识别</li>
<li>车辆识别—用于变灯判断</li>
<li>多路口红绿灯连接—用于潮汐车道。</li>
</ul>
<h2 id="车车互联"><a href="#车车互联" class="headerlink" title="车车互联"></a>车车互联</h2><p>车车娱乐系统<br>场景： 提前预警； 信息互通</p>
<h2 id="密码管理平台"><a href="#密码管理平台" class="headerlink" title="密码管理平台"></a>密码管理平台</h2><ol>
<li><p>通过手机号码掌管所有已注册的应用或平台</p>
</li>
<li><p>隐私管理， 手机号码多一层加密，对应用或平台进行隐藏</p>
</li>
<li><p>记录所有平台的密码, 支持一键修改</p>
</li>
<li><p><strong>如何更好的记住密码，方便查询密码</strong></p>
</li>
</ol>
<h2 id="不同平台互联，传输文件开始"><a href="#不同平台互联，传输文件开始" class="headerlink" title="不同平台互联，传输文件开始"></a>不同平台互联，传输文件开始</h2><p>windows跟手机传输文件，只能通过第三方软件的文件传输功能，手机发送文件到文件传输，windows打开软件文件传输接收文件，然后另存问到windows<br>这样很烦， iphone的 隔空传送其实任何平台都应该支持。</p>
<h2 id="针对小公司的云存储平台"><a href="#针对小公司的云存储平台" class="headerlink" title="针对小公司的云存储平台"></a>针对小公司的云存储平台</h2><p>bg：小公司缺乏技术人员，文件保存杂乱，可追溯性差， 公司的积累事倍功半。<br>客户信息，交易记录，经验积累等生产资料。这些丢失对于一个公司的损失很惨重。<br>我认为任何正常的小公司需要一个存储重要文件的地方。还可以有效的分类管理，方便查找和预览。</p>
<h2 id="通识知识娱乐化"><a href="#通识知识娱乐化" class="headerlink" title="通识知识娱乐化"></a>通识知识娱乐化</h2><p>受启发于 freecodecamp.org 该组织致力于将编程知识模块化，做成可实操可视的形式，大大提高了学习兴趣和效率。<br>将大学教材里面的 数学，物理各种理科知识用生动的形式展现，方便学习。<br>这种形式不局限于 动画，视频，游戏，模拟界面，重在让学习者学的过程轻松，激发兴趣，记忆深刻。<br>知识内容可以延伸到从幼儿园，和小学教材开始。积攒人气和投资。<br>把死板的知识变得生动。刺激教育改革。</p>
<ul>
<li>知识培训系统框架： 支持文本，gif，互动视频媒介操作，编译器&amp; 编辑器。</li>
</ul>
<h2 id="AR-产品"><a href="#AR-产品" class="headerlink" title="AR 产品"></a>AR 产品</h2><p>终极目标，希望能把AR真的落实到实际应用。让人们用的起，用的便捷。<br>比如，如同普通眼镜带头显功能，带扫描功能，带存储和回放功能。</p>
<p>2023-6-6： apple vision pro实际上已经实现以上功能，望周知~ 但是价格太贵</p>
<blockquote class="blockquote-center">
<p><strong>思考具有局限性</strong><br>你认为的正确只是在你了解的知识体系中的正确</p>

</blockquote>
]]></content>
      <categories>
        <category>daily_note</category>
      </categories>
      <tags>
        <tag>ideas</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo blog SEO configure</title>
    <url>/hexo-blog-SEO-configure/</url>
    <content><![CDATA[<h1 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h1><p>SEO(Search Engine Optimization) 针对搜索引擎的优化。<br>意义是让我们的博客能被通过搜索引擎查询相关问题的人更容易看到浏览。(换句话说，没有这方面需求的人可以忽略)  </p>
<p>我没有相关的需求，玩的就是一个收藏。毕竟写博客主要目的是技术积累，以及和朋友的谈资  : )<br>至于博客里面甚至留了bitcoin的打赏二维码，相信我，那只是为了好玩。 : )  </p>
<p>出于对技术的热爱角度，也来学习一下，万一以后能用到呢。所以没有和hexo博客搭建写在一起，而是单独另起一篇细细的看下，有用的记录下。<br>如果你有缘看到了，那就一起学习下有哪些方式吧。</p>
<h2 id="添加搜索引擎的认证"><a href="#添加搜索引擎的认证" class="headerlink" title="添加搜索引擎的认证"></a>添加搜索引擎的认证</h2><h2 id="sitemap"><a href="#sitemap" class="headerlink" title="sitemap"></a>sitemap</h2><h2 id="优化目录结构"><a href="#优化目录结构" class="headerlink" title="优化目录结构"></a>优化目录结构</h2><p>修改站点配置文件<code>_config.yml--&gt; permalink</code></p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">permalink: :year:month:day/:title/</span><br></pre></td></tr></tbody></table></figure>

<p>or</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line">permalink: :title.html</span><br></pre></td></tr></tbody></table></figure>

<p>从而改变博客的目录结构</p>
<h2 id="代码压缩"><a href="#代码压缩" class="headerlink" title="代码压缩"></a>代码压缩</h2><p>网页的代码存在大量空白符，压缩代码可以提高网站被访问速度。</p>
<p>安装插件： <code>npm install hexo-neat --save</code>  </p>
<p>修改<em>站点配置文件</em>：</p>
<figure class="highlight text"><table><tbody><tr><td class="code"><pre><span class="line"># 开启压缩</span><br><span class="line">neat_enable: true</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - '**/*.min.css'</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - '**/*.min.js'</span><br><span class="line">    - '**/index.js'</span><br></pre></td></tr></tbody></table></figure>

<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a><strong>reference</strong></h1><ul>
<li>知乎： <a href="https://zhuanlan.zhihu.com/p/344927945">hexo博客高级优化</a>  </li>
<li>NexT： <a href="https://theme-next.js.org/docs/theme-settings/seo">SEO|NexT</a></li>
</ul>
<blockquote class="blockquote-center">
<p>永远拥抱开放，拥抱自由，where we stands as who we are</p>

</blockquote>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>SEO</tag>
        <tag>next-plugin</tag>
      </tags>
  </entry>
</search>
